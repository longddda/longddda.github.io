<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>动手学深度学习-1</title>
      <link href="/2023/03/20/%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-1/"/>
      <url>/2023/03/20/%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-1/</url>
      
        <content type="html"><![CDATA[<h1 id="第一课-配置环境"><a href="#第一课-配置环境" class="headerlink" title="第一课 配置环境"></a>第一课 配置环境</h1><p>由于之前学习了一点点tensorflow，所以直接配置了一下pytorch的环境，主要是将两者安装到同一个文件夹中，采用如下代码，就可以直接配置conda,并且成功运行。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#首先时查看tensorflow的文件位置，也就是虚拟环境的位置</span></span><br><span class="line">conda env <span class="built_in">list</span></span><br><span class="line"><span class="comment">#随后直接激活tensorflow这个文件夹，并且在这个文件夹中进行运行</span></span><br><span class="line">pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu117</span><br></pre></td></tr></table></figure><br>随后就可以很好地在一个环境中，进行运行pytorch以及tensorflow了，感觉很好。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#调试</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="comment">#设置一个张量并且可以打印成功，就表示环境配置结束</span></span><br><span class="line">x = torch.arange(<span class="number">12</span>)</span><br><span class="line"><span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据科学，深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>列表以及其相关操作</title>
      <link href="/2023/03/13/%E5%88%97%E8%A1%A8%E4%BB%A5%E5%8F%8A%E5%85%B6%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/03/13/%E5%88%97%E8%A1%A8%E4%BB%A5%E5%8F%8A%E5%85%B6%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="2-列表以及其相关操作"><a href="#2-列表以及其相关操作" class="headerlink" title="2.列表以及其相关操作"></a>2.列表以及其相关操作</h1><h4 id="1-列表是什么"><a href="#1-列表是什么" class="headerlink" title="1.列表是什么"></a>1.列表是什么</h4><p>列表由⼀系列按特定顺序排列的元素组成。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bicycles = [<span class="string">&#x27;trek&#x27;</span>,<span class="string">&#x27;cannondale&#x27;</span>,<span class="string">&#x27;redline&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(bicycles)</span><br></pre></td></tr></table></figure><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将会直接打印出来以下的内容</span></span><br><span class="line">[<span class="string">&#x27;trek&#x27;</span>,<span class="string">&#x27;cannondale&#x27;</span>,<span class="string">&#x27;redline&#x27;</span>]</span><br></pre></td></tr></table></figure></p><ul><li>1.1访问列表元素<br>列表是有序集合，因此要访问列表的任何元 素，只需将该元素的位置或索引告诉Python 即可。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bicycles = [<span class="string">&#x27;trek&#x27;</span>,<span class="string">&#x27;cannondale&#x27;</span>,<span class="string">&#x27;redline&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(bicycles[<span class="number">0</span>])<span class="comment">#主要是打印第一个元素trek</span></span><br></pre></td></tr></table></figure></li><li>1.2列表中的元素是从0开始，而不是从1开始；如果只是想着访问最后一个元素，Python提供了很好地方法，最后一个元素的索引是-1，-2表示倒数第二个元素。</li><li>1.3使用列表中的各个值<br>可以使用其他的变量一样使用列表中的各个值<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bicycles = [<span class="string">&#x27;trek&#x27;</span>,<span class="string">&#x27;cannondale&#x27;</span>,<span class="string">&#x27;redline&#x27;</span>]</span><br><span class="line">message = <span class="string">&#x27;My first bicycle was a&#x27;</span> + bicycles[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure>上述的代码主要是使用bicycles的第一个元素省生成了一个句子’My first bicycle was a trek’ 。<h4 id="2-修改、添加、删除元素"><a href="#2-修改、添加、删除元素" class="headerlink" title="2.修改、添加、删除元素"></a>2.修改、添加、删除元素</h4>创建的⼤多数列表都将是动态的，这意味着列表创建后，将随着程序的运⾏增删元素。</li><li>2.1修改列表元素<br>修改列表元素的语法与访问列表元素的语法类似。要修改列表元素，可指定列表名和要修改的元素的索引，再指定该元素的新值。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bicycles = [<span class="string">&#x27;trek&#x27;</span>,<span class="string">&#x27;cannondale&#x27;</span>,<span class="string">&#x27;redline&#x27;</span>]</span><br><span class="line"><span class="comment">#修改自行车集合中的第一个元素为‘honda’</span></span><br><span class="line">bicycles[<span class="number">0</span>] = <span class="string">&#x27;honda&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(bicycles)</span><br><span class="line"><span class="comment">#输出为[&#x27;honda&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span></span><br></pre></td></tr></table></figure></li><li>2.2在列表中添加元素<br>列表中添加新的元素。在末尾添加元素可以次啊用append()方法。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bicycles = [<span class="string">&#x27;trek&#x27;</span>,<span class="string">&#x27;cannondale&#x27;</span>,<span class="string">&#x27;redline&#x27;</span>]</span><br><span class="line"><span class="comment">#在这个列表中添加一个自行车种类为&#x27;honda&#x27;</span></span><br><span class="line">bicycles.append(<span class="string">&#x27;honda&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(bicycles)</span><br><span class="line"><span class="comment">#打印出来的列表为[&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;,&#x27;honda&#x27;]</span></span><br></pre></td></tr></table></figure></li><li>2.3在列表中删除元素<br>我们通常需要在一个列表中删除一个或者多个不太需要的元素。<br>（1）如果知道需要删除元素的位置，可以采用del语句。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bicycles = [<span class="string">&#x27;trek&#x27;</span>,<span class="string">&#x27;cannondale&#x27;</span>,<span class="string">&#x27;redline&#x27;</span>]</span><br><span class="line"><span class="keyword">del</span> bicycles[<span class="number">0</span>]<span class="comment">#表示删除第一个元素’trek‘</span></span><br><span class="line"><span class="built_in">print</span>(bicycles)<span class="comment">#输出[&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span></span><br></pre></td></tr></table></figure>（2）使用方法pop()删除元素：有时候需要将元素删除并且接着使用它的值。该方法主要是可以删除列表末尾的元素，并且让你能够接着使用它。术语弹出(pop)源⾃这样的类⽐：列表就像⼀个栈，⽽删除列表末尾的元素相当于弹出栈顶元素。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bicycles = [<span class="string">&#x27;trek&#x27;</span>,<span class="string">&#x27;cannondale&#x27;</span>,<span class="string">&#x27;redline&#x27;</span>]</span><br><span class="line">popped_bicycles = bicycles.pop()<span class="comment">#表示删除最后一个元素&#x27;redline&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(bicycles)<span class="comment">#输出[&#x27;trek&#x27;,&#x27;cannondale&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(popped_bicycles)<span class="comment">#输出&#x27;redline&#x27;</span></span><br></pre></td></tr></table></figure>（3）弹出列表中任何位置处的元素：实际上可以采用pop()来删除任何位置的元素，只需要在括号中增加删除的元素的索引。<br>（4）根据值删除元素：直接采用remove()方法<br>加入上面的自行车，我们需要移除’cannondale’,可以采用如下操作<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bicycles = [<span class="string">&#x27;trek&#x27;</span>,<span class="string">&#x27;cannondale&#x27;</span>,<span class="string">&#x27;redline&#x27;</span>]</span><br><span class="line">bicycles.remove(<span class="string">&#x27;cannondale&#x27;</span>)</span><br><span class="line">pritn(bicycles)<span class="comment">#打印[&#x27;trek&#x27;,&#x27;redline&#x27;]</span></span><br></pre></td></tr></table></figure><h4 id="3-组织列表"><a href="#3-组织列表" class="headerlink" title="3.组织列表"></a>3.组织列表</h4>在你创建的列表中，元素的排列顺序常常是⽆法预测的，因为你并⾮总能控制⽤户提供数据的顺序。这虽然在⼤多数情况下都是不可避免的，但你经常需要以特定的顺序呈现信息。有时候，你希望保留列表元素最初的排列顺序，⽽有时候又需要调整排列顺序。 Python提供了很多组织列表的⽅式，可根据具体情况选⽤。</li><li>3.1使用sort()对列表进行永久性排序：主要是采用采用字母顺序进行排序。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bicycles = [<span class="string">&#x27;trek&#x27;</span>,<span class="string">&#x27;cannondale&#x27;</span>,<span class="string">&#x27;redline&#x27;</span>]</span><br><span class="line">bicycles.sort()</span><br><span class="line"><span class="comment">#直接输出[&#x27;cannondale&#x27;,&#x27;redline&#x27;,&#x27;trek&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(bicycles)</span><br></pre></td></tr></table></figure></li><li>3.2使用函数sorted()对列表进行临时性排序<br>要保留列表元素原来的排列顺序，同时以特定的顺序呈现它们，可使⽤函数sorted() 。函数sorted()让你能够按特定顺序显⽰列表元素，同时不影响它们在列表中的原始排列顺序。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cars = [<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Here is the original list:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(cars)<span class="comment">#输出[&#x27;bmw&#x27;,&#x27;audi&#x27;,&#x27;toyota&#x27;,&#x27;subaru&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nHere is the sorted list:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(cars))<span class="comment">#输出[&#x27;audi&#x27;,&#x27;bmw&#x27;,&#x27;subaru&#x27;,&#x27;toyota&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nHere is the original list again:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(cars)<span class="comment">#输出[&#x27;bmw&#x27;,&#x27;audi&#x27;,&#x27;toyota&#x27;,&#x27;subaru&#x27;]</span></span><br></pre></td></tr></table></figure>采用sorted()函数对列表进行排序，列表中的元素信息并没有改变，也可以在里面传递参数reverse =True。</li><li>3.3倒叙打印列表<br>需要反转打印列表中的顺序可以采用方法reverse().该方法只是对列表中的顺序进行反转。</li><li>3.4确定列表的长度<br>主要是采用len()方法进行统计元素的长度<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cars = [<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line"><span class="built_in">len</span>(cars)<span class="comment">#输出长度为4</span></span><br></pre></td></tr></table></figure><h4 id="4-使用列表时避免索引错误"><a href="#4-使用列表时避免索引错误" class="headerlink" title="4.使用列表时避免索引错误"></a>4.使用列表时避免索引错误</h4>刚开始使用列表时，经常使用一种错误。索引错误意味着python无法理解你指定的索引。程序发生索引错误时，请尝试将你指定的索引减1，再次运行结果可以很好地查看结果是否正确。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles[-<span class="number">1</span>])<span class="comment">#打印最后一个元素</span></span><br></pre></td></tr></table></figure><h4 id="5-遍历整个列表"><a href="#5-遍历整个列表" class="headerlink" title="5.遍历整个列表"></a>5.遍历整个列表</h4>你经常需要遍历列表的所有元素，对每个元素执⾏相同的操作。下面是采用for循环进行打印每个列表中的元素：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">magicians = [<span class="string">&#x27;alice&#x27;</span>,<span class="string">&#x27;david&#x27;</span>,<span class="string">&#x27;carolina&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> magician <span class="keyword">in</span> magicians:</span><br><span class="line"><span class="built_in">print</span>(magician)<span class="comment">#一个一个进行打印</span></span><br></pre></td></tr></table></figure></li><li>5.1深入研究循环<br>循环这种概念特别重要，因为他是让计算机自动完成重复工作的常见方式之一。刚开始使⽤循环时请牢记，对列表中的每个元素，都将执⾏循环指定的步骤，⽽不管列表包含多少个元素。编写for循环时，对于⽤于存储列表中的每个临时变量，可以指定任何名称。</li><li>5.2在for循环中执行更多的操作<br>在for循环中，可以是对每个元素执行任何操作。并且在循环里面，是对每个元素执行同样的操作。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">magicians = [<span class="string">&#x27;alice&#x27;</span>,<span class="string">&#x27;david&#x27;</span>,<span class="string">&#x27;carolina&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> magician <span class="keyword">in</span> magicians:</span><br><span class="line"><span class="built_in">print</span>(magician.title() + <span class="string">&#x27;, that was a great trick!&#x27;</span>)<span class="comment">#一个一个进行打印</span></span><br></pre></td></tr></table></figure></li><li>5.3在for循环结束之后进行一些操作<br>在for循环结束之后，通常需要提供总结性输出或接着执⾏程序必须完成的其他任务。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">magicians = [<span class="string">&#x27;alice&#x27;</span>,<span class="string">&#x27;david&#x27;</span>,<span class="string">&#x27;carolina&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> magician <span class="keyword">in</span> magicians:</span><br><span class="line"><span class="built_in">print</span>(magician.title() + <span class="string">&#x27;, that was a great trick!&#x27;</span>)<span class="comment">#一个一个进行打印</span></span><br><span class="line"><span class="comment">#所有的循环结束之后，可以采用一个print语句进行总结</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;thank you!&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="6-避免缩进错误"><a href="#6-避免缩进错误" class="headerlink" title="6.避免缩进错误"></a>6.避免缩进错误</h4>Python根据缩进来判断代码⾏与前⼀个代码⾏的关系。</li><li>6.1忘记缩进<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">magicians = [<span class="string">&#x27;alice&#x27;</span>,<span class="string">&#x27;david&#x27;</span>,<span class="string">&#x27;carolina&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> magician <span class="keyword">in</span> magicians:</span><br><span class="line"><span class="comment">#这个时候，程序会直接报错，基于其没有找到期望缩进的代码行</span></span><br><span class="line"><span class="built_in">print</span>(magician.title() + <span class="string">&#x27;, that was a great trick!&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li>6.2 忘记缩进额外的代码行<br>试图在循环中执⾏多项任务，却忘记缩进其中的⼀些代码⾏时， 就会出现这种情况。这个时候，语法上是正确的，但是我们的逻辑上确实是错误的。</li><li>6.3不必要的缩进<br>有些时候，我们会不小心锁进了无需缩进的代码，这个时候，python将指出这一点：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&#x27;hello python world!&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(message)<span class="comment">#这个缩进是不必要的，会报错</span></span><br></pre></td></tr></table></figure></li><li>6.4循环后不必要的缩进<br>如果你不⼩⼼缩进了应在循环结束后执⾏的代码，这些代码将针对每个列表元素重复执⾏。在有些情况下，这可能导致Python报告语法错误，但在⼤多数情况下，这只会导致逻辑错误。</li><li>6.5遗漏了冒号<br>如果具备关键的冒号的遗失，这将会导致语法的错误。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">magicians = [<span class="string">&#x27;alice&#x27;</span>,<span class="string">&#x27;david&#x27;</span>,<span class="string">&#x27;carolina&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> magician <span class="keyword">in</span> magicians</span><br><span class="line"><span class="built_in">print</span>(magician.title() + <span class="string">&#x27;, that was a great trick!&#x27;</span>)<span class="comment">#for循环的冒号遗失，直接报错</span></span><br></pre></td></tr></table></figure><h4 id="7-创建数值列表"><a href="#7-创建数值列表" class="headerlink" title="7.创建数值列表"></a>7.创建数值列表</h4>列表⾮常适合⽤于存储数字集合，⽽Python 提供了很多⼯具，可帮助你⾼效地处理数字列表。</li><li>7.1使用函数range()<br>采用该函数可以帮你很轻松的生成一系列数字：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line"><span class="built_in">print</span>(value)</span><br></pre></td></tr></table></figure>在这个⽰例中， 只是打印数字 1~4，这是你在编程语⾔中经常看到的差⼀⾏为的结果。函数让Python从你指 定的第⼀个值开始数，并在到达你指定的第⼆个值后停⽌，因此输出不包含第⼆个值（这⾥为5）。</li><li>7.2使用range()创建数字列表<br>需要创建数字列表，可以直接采用函数list()将range()的参数，输出为一个数字列表。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">numbers = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">6</span>))</span><br><span class="line"><span class="built_in">print</span>(numbers)</span><br></pre></td></tr></table></figure>采用range函数，还可以直接使用步长，相当于是等差数列的差。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">numbers = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(numbers)<span class="comment">#结果为[1,3,5]</span></span><br></pre></td></tr></table></figure><p>采用range()函数，创建全新的数据集，是一个生成树的平方。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">squares = []</span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">squares.append(value**<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(squares)</span><br></pre></td></tr></table></figure></p><ul><li>7.3对数字列表执行简单的统计计算<br>具有几个专门用于处理python程序的函数，分别是最大值，最小值，求和：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">digits = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="built_in">min</span>(digits)<span class="comment">#1</span></span><br><span class="line"><span class="built_in">max</span>(digits)<span class="comment">#5</span></span><br><span class="line"><span class="built_in">sum</span>(digits)<span class="comment">#15</span></span><br></pre></td></tr></table></figure></li><li>7.4列表解析<br>前⾯介绍的⽣成列表squares的⽅式包含三四⾏代码，⽽列表解析让你只需编写⼀⾏代码就能⽣成这样的列表。列表解析主要是将for循环和创建新元素的代码整合成为一行代码，并且自动附加新元素。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">squares = [value**<span class="number">2</span> <span class="keyword">for</span> value <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>)]</span><br><span class="line"><span class="built_in">print</span>(squares)</span><br></pre></td></tr></table></figure>要使⽤这种语法，⾸先指定⼀个描述性的列表名，如 squares；然后，指定⼀个左⽅括号，并定义⼀个表达式，⽤于⽣成你要存储 到列表中的值。在这个示例中，表达式 为 （value <strong> 2），它计算平⽅值。接下来，编写⼀个循环，⽤于给表达式提供值，再 加上右⽅括号。在这个示例中， for循环为for value in range(1,11)，它将 值1~10提供给表达式（value </strong> 2）。请注意， 这⾥的for语句末尾没有冒号。<h4 id="8-使用列表的一部分"><a href="#8-使用列表的一部分" class="headerlink" title="8.使用列表的一部分"></a>8.使用列表的一部分</h4>前面学习了如何访问单个列表中的元素，这里主要是讲解获取另外一种元素，我们称之为切片。</li><li>8.1切片<br>要创建切⽚，可指定要使⽤的第⼀个元素和最后⼀个元素的索引。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">digits = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="built_in">print</span>(digits[<span class="number">0</span>:<span class="number">2</span>])<span class="comment">#主要是提取前面两个元素</span></span><br><span class="line"><span class="built_in">print</span>(digits[<span class="number">2</span>:])<span class="comment">#主要是输出第二个元素开始打印</span></span><br><span class="line"><span class="built_in">print</span>(digits[-<span class="number">3</span>:])<span class="comment">#主要是打印倒数三个元素</span></span><br></pre></td></tr></table></figure></li><li>8.2遍历切片<br>如果需要遍历切片可以采用for循环进行。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">digits = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="comment">#提取前面两个人元素</span></span><br><span class="line"><span class="keyword">for</span> digit <span class="keyword">in</span> digits[<span class="number">0</span>:<span class="number">2</span>]:</span><br><span class="line"><span class="built_in">print</span>(digit)</span><br></pre></td></tr></table></figure></li><li>8.3复制列表<br>你经常需要根据既有列表创建全新的列表。要复制列表，可创建⼀个包含整个列表的切⽚，⽅法是同时省略起始索引和终⽌索引（[:]）,主要是让python开始于第一个元素，并且终止于最后一个元素。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">digits = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="comment">#复制该列表采用如下的代码即可，表示将列表的副本进行存储</span></span><br><span class="line">my_digits = digits[:]</span><br><span class="line"><span class="comment">#采用赋值的方法是行不通的，比如下方</span></span><br><span class="line">my_digits = digits</span><br></pre></td></tr></table></figure>案例：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">my_foods = [<span class="string">&#x27;pizza&#x27;</span>,<span class="string">&#x27;falafel&#x27;</span>,<span class="string">&#x27;carrot&#x27;</span>]</span><br><span class="line">firend_foods = my_firend<span class="comment">#采用赋值的方法</span></span><br><span class="line">my_foods.append(<span class="string">&#x27;cannoli&#x27;</span>)</span><br><span class="line">firend_foods.append(<span class="string">&#x27;ice cream&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nmy favorite foods are:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(my_foods)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nmy firend&#x27;s favorite foods are:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(firend_foods)</span><br></pre></td></tr></table></figure>以上案例的方法下，my_food以及firends_food两个列表的值是一样的，想要具备改变，还是需要创建新的列表，也就是采用”firend_foods = my_firend[:]” 代码，主要是可以创建一个新的列表，但是赋值却是在原先的列表上进行修改。<h4 id="9-元组"><a href="#9-元组" class="headerlink" title="9.元组"></a>9.元组</h4>列表⾮常适合⽤于存储在程序运⾏期间可能 变化的数据集。列表是可以修改的，这对处理⽹站的⽤户列表或游戏中的⾓⾊列表⾄关 重要。然⽽，有时候你需要创建⼀系列不可修改的元素，元组可以满⾜这种需求。 Python将不能修改的值称为不可变的，⽽不可变的列表被称为元组。</li><li>9.1定义元组<br>元组可以看成是特殊的列表。采用圆括号进行表示各个元素。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dimensions = (<span class="number">20</span>,<span class="number">2</span>)</span><br><span class="line"><span class="comment">#采用赋值语句进行更改元组中的值，将会直接报错</span></span><br><span class="line">dimensions[<span class="number">0</span>] = <span class="number">25</span></span><br></pre></td></tr></table></figure>试图修改元组中的值是不被允许的，这个时候会导致python返回的类型发生错误。</li><li>9.2遍历元组中的所有制<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dimensions = (<span class="number">20</span>,<span class="number">2</span>)</span><br><span class="line"><span class="comment">#与列表很相似，都是采用for循环</span></span><br><span class="line"><span class="keyword">for</span> dimension <span class="keyword">in</span> dimensions:</span><br><span class="line"><span class="built_in">print</span>(dimensions)</span><br></pre></td></tr></table></figure></li><li>9.3修改元组中的变量<br>虽然不能修改元组中的元素，但是可以存储元组的变量赋值。从而相当于是直接改变整个元组。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">dimensions = (<span class="number">200</span>,<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;original dimensions&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> dimension <span class="keyword">in</span> dimensions:</span><br><span class="line"><span class="built_in">print</span>(dimensions)</span><br><span class="line"><span class="comment">#直接修改元组，是被解释器所允许的。</span></span><br><span class="line">dimensions = (<span class="number">250</span>,<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;modified dimensions&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> dimension <span class="keyword">in</span> dimensions:</span><br><span class="line"><span class="built_in">print</span>(dimensions)</span><br></pre></td></tr></table></figure><h4 id="10-设置代码格式Python改进提案（Python-Enhancement-Proposal，PEP-8）"><a href="#10-设置代码格式Python改进提案（Python-Enhancement-Proposal，PEP-8）" class="headerlink" title="10.设置代码格式Python改进提案（Python Enhancement Proposal，PEP 8）"></a>10.设置代码格式Python改进提案（Python Enhancement Proposal，PEP 8）</h4>为确保所有⼈编写的代码的结构都⼤致⼀致，Python程序员都遵循⼀些格式设置约定。学会编写整洁的Python后，就能明⽩他⼈编写的Python代码的整体结构——只要他们和你遵循相同的指南。要成为专业程序员，应从现在开始就遵循这些指南，以养成良好的习惯。</li><li>10.1格式设置指南<br>可读性强：如果⼀定要在让代码易于编写和易于阅读之间做出选择，Python程序员⼏乎总是会选择 后者。下⾯的指南可帮助你从⼀开始就编写出清晰的代码。</li><li>10.2缩进<br>每级缩进都使⽤四个空格，这既可提⾼可读性，又留下了⾜够的多级缩进空 间。</li><li>10.3行长<br>很多Python程序员都建议每⾏不超过80字符。最初制定这样的指南时，在⼤多数计算 机中，终端窗⼜每⾏只能容纳79字符；当 前，计算机屏幕每⾏可容纳的字符数多得 多，为何还要使⽤79字符的标准⾏长呢？这⾥有别的原因。专业程序员通常会在同⼀个屏幕上打开多个⽂件，使⽤标准⾏长可以让他们在屏幕上并排打开两三个⽂件时能同时看到各个⽂件的完整⾏。PEP 8还建议注释 的⾏长都不超过72字符，因为有些⼯具为⼤型项⽬⾃动⽣成⽂档时，会在每⾏注释开头 添加格式化字符。</li><li>10.4空行<br>要将程序的不同部分分开，可使⽤空⾏。你应该使⽤空⾏来组织程序⽂件，但也不能滥⽤。</li><li>10.5其他的格式设置指南<br>更多的指南，可以直接访问[<a href="https://python.org/dev/peps/pep-0008/">https://python.org/dev/peps/pep-0008/</a>]<h4 id="11-小结"><a href="#11-小结" class="headerlink" title="11. 小结"></a>11. 小结</h4>学习了列表的相关知识；遍历列表；Python如何根据缩进来确定程序的结构以及如何避免⼀些常见的缩进错误；如何创建简单的数字列表，以及可对数字列表执⾏的⼀些操作；如何通过切⽚来使⽤列表的⼀部分和复制列表。你还学习了元组（它对不应变化的值提供了⼀定程度的保护），以及在代 码变得越来越复杂时如何设置格式，使其易于阅读。</li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
            <tag> python编程从入门到实践 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>变量与简单的数据类型</title>
      <link href="/2023/03/13/%E5%8F%98%E9%87%8F%E4%B8%8E%E7%AE%80%E5%8D%95%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2023/03/13/%E5%8F%98%E9%87%8F%E4%B8%8E%E7%AE%80%E5%8D%95%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="1-变量与简单的数据类型"><a href="#1-变量与简单的数据类型" class="headerlink" title="1.变量与简单的数据类型"></a>1.变量与简单的数据类型</h1><h4 id="1-关于运行hello-world-py时发生的情况"><a href="#1-关于运行hello-world-py时发生的情况" class="headerlink" title="1.关于运行hello_world.py时发生的情况"></a>1.关于运行hello_world.py时发生的情况</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello, Python World!&quot;</span>)</span><br></pre></td></tr></table></figure><p>运行该文件时，末尾以.py指出这是一个python文件，因此编辑器将使用python解释器来运行它。Python解释器将读取每一个单词的意思，这个程序主要是读取print时，将括号内的内容打印到屏幕上显示，而不会去管括号里是啥。</p><h4 id="2-变量"><a href="#2-变量" class="headerlink" title="2.变量"></a>2.变量</h4><p>以下主要是添加了一个message的变量，每个变量主要是存储了一个值，与变量相关联的信息。并且对message具有两次赋值，所以表示变量值可以随时改变。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&#x27;hello,python world!&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(message)</span><br><span class="line">message = <span class="string">&#x27;hello python world crash course course world!&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure></p><ul><li>2.1变量的命名以及使用<br>关于变量的使用具备一定的规则：变量名只能包含字母、数字、下划线。变量名可以是字母或下划线打头，但是不能以数字打头；变量名不能包含空格；不要将变量的关键字或者函数名作为变量名；变量名应该既简短又具备描述性；慎用小写字母l以及字母O，因为他们很容易被别人看成0以及1；就目前而言，应该使用小写字母作为python的变量名，一般不会使用大写字母，创建有意义的变量名是一种不错的方法。</li><li>2.2使用变量时避免命名错误<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&#x27;hello python crash course reade&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;mesage&#x27;</span>)</span><br></pre></td></tr></table></figure>当程序出现问题，比如以上的变量名出现问题，解释器将竭尽所能地帮你找出问题地根源，程序无法正常地运行时，解释器将提供一个traceback。这个主要是一条记录，指出解释器尝试运行代码时，有什么地方陷入了困境，可以帮助我们快速地发现问题所在。<h4 id="3-字符串"><a href="#3-字符串" class="headerlink" title="3.字符串"></a>3.字符串</h4>字符串就是一系列字符，在python中，用引号括起来地都是字符串，其中地引号可以是单引号也可以是双引号。</li><li>3.1使用方法修改字符串地大小写<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&#x27;ada lovelace&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(name.title())<span class="comment">#使得首字母大写</span></span><br></pre></td></tr></table></figure>在这个实例中，小写的字符串’ada lovelace’储存在变量name中，但是在print函数中，采用name.title()中，name后面的句号让python对变量name执行方法title()指定的操作。<br>当然对于字母的书写还有其他的方法，比如全部大写或者全部小写。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&#x27;ada lovelace&#x27;</span></span><br><span class="line"><span class="comment">#全部大写</span></span><br><span class="line"><span class="built_in">print</span>(name.upper())</span><br><span class="line"><span class="comment">#全部小写</span></span><br><span class="line"><span class="built_in">print</span>(name.lower())</span><br></pre></td></tr></table></figure></li><li>3.2合并字符串<br>Python使用“+”来进行不同字符串地连接。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">first_name = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">last_name = <span class="string">&#x27;world&#x27;</span></span><br><span class="line">full_name = first_name + <span class="string">&quot; &quot;</span> +last_name +“ ” + “!”</span><br><span class="line"><span class="built_in">print</span>(full_name)<span class="comment">#最终将输出 hello world ！</span></span><br></pre></td></tr></table></figure></li><li>3.3使用制表符或者换行符来添加空白<br>在编程中，空白主要是指任何非打印字符，如空格、制表符以及换行符。你可以次啊用空白卡死组织输出，以示的其更容易读。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#采用\t表示缩进四个字符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\thello&#x27;</span>)</span><br><span class="line"><span class="comment">#采用\n表示换行</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;languages:\npython\nc\njava&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li>3.4删除空白<br>有时候空白是非常重要的，但是额外的空白确实是会使得程序变得非常迷惑。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#采用方法删除字符串末尾地空白</span></span><br><span class="line">favorite_language = <span class="string">&#x27;python &#x27;</span><span class="comment">#具备很明显地空格</span></span><br><span class="line">favorite_language.rstrip()<span class="comment">#可以直接删除后面地空格</span></span><br><span class="line">favorite_language.strip()<span class="comment">#可以删除字符串两端地空白</span></span><br><span class="line">favorite_language.lstrip()<span class="comment">#可以删除字符串开头的空白</span></span><br></pre></td></tr></table></figure></li><li>3.5使用字符串时避免语法错误<br>这个最常见地是采用单括号括起来地字符串中，如果包含撇号，就会使得报错产生，这个时候解释器会将第一个单引号以及撇号之间地内容看成是字符串，但是余下的文本就会直接视为是python代码，所以会直接导致出错。<em>我们可以借助编辑器中地颜色来判断这类错误。</em><h4 id="4-数字"><a href="#4-数字" class="headerlink" title="4.数字"></a>4.数字</h4>在编程中，经常使⽤数字来记录游戏得分、表⽰可视化数据、存储Web应⽤信息等。 Python根据数字的⽤法以不同的⽅式处理它们。</li><li>4.1整数：可以对整数进行加减乘除操作<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span>+<span class="number">3</span><span class="comment">#计算结果是5</span></span><br><span class="line"><span class="number">3</span>-<span class="number">2</span><span class="comment">#计算结果是1</span></span><br><span class="line"><span class="number">3</span>/<span class="number">2</span><span class="comment">#计算结果是1.5</span></span><br><span class="line"><span class="number">3</span>**<span class="number">2</span><span class="comment">#表示乘方操作，可以打印出9</span></span><br><span class="line"><span class="number">2</span>+<span class="number">3</span>**<span class="number">2</span><span class="comment">#进行多种不一样的运算，在一个算式中</span></span><br></pre></td></tr></table></figure></li><li>4.2浮点数<br>Python将带⼩数点的数字都称为浮点数。从很⼤程度上说，使⽤浮点数时都⽆需考虑 其⾏为。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0.1</span>+<span class="number">0.1</span><span class="comment">#输出0.2</span></span><br><span class="line"><span class="number">0.1</span>+<span class="number">0.1</span><span class="comment">#可能输出0.200000，小数位数可能是不确定的</span></span><br></pre></td></tr></table></figure>结果包含地小数位数可能是不确定的，这个在很多的语言中都存在着这个问题，目前主要是采用暂时忽略小数位数地方法。</li><li>4.3使用str()方法避免类型错误<br>经常会在消息中使用变量地值。比如有人会祝你生日快乐，写出下面的代码：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">23</span></span><br><span class="line">message = <span class="string">&#x27;Happy&#x27;</span> + age + <span class="string">&#x27;rd Birthday!&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure></li></ul><p>由于age是一个数值，不是字符串，所以需要转化，否则代码报错，正确的写法是message = ‘Happy’ + str(age) + ‘rd Birthday!’ ;⼤多数情况下，在Python中使⽤数字都⾮常 简单。如果结果出乎意料，请检查Python是否按你期望的⽅式将数字解读为了数值或字符串。</p><h4 id="5-注释"><a href="#5-注释" class="headerlink" title="5.注释"></a>5.注释</h4><p>在⼤多数编程语⾔中，注释都是⼀项很有⽤的功能。可以增加代码的可读性。</p><ul><li>5.1如何编写注释<br>在Python中，注释⽤井号（ # ）标识。前面具备这个标识，通常会是忽略掉一整行代码，执行后面得行。</li><li>5.2需要编写什么样的注释<br>编写注释的主要⽬的是阐述代码要做什么， 以及是如何做的。作为新⼿，最值得养成的习惯之⼀是，在代码中编写清晰、简洁的注释。<h4 id="6-小结"><a href="#6-小结" class="headerlink" title="6.小结"></a>6.小结</h4>在本节中，学习了：如何使⽤变量；如何创建描述性变量名以及如何消除名称错误和 语法错误；字符串是什么，以及如何使⽤⼩ 写、⼤写和⾸字母⼤写⽅式显⽰字符串；使⽤空⽩来显⽰整洁的输出，以及如何剔除字符串中多余的空⽩；如何使⽤整数和浮点 数；使⽤数值数据时需要注意的意外⾏为。 你还学习了如何编写说明性注释，让代码对你和其他⼈来说更容易理解。</li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
            <tag> python编程从入门到实践 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI科研绘图学习笔记</title>
      <link href="/2023/03/10/AI-%E7%A7%91%E7%A0%94%E7%BB%98%E5%9B%BE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/03/10/AI-%E7%A7%91%E7%A0%94%E7%BB%98%E5%9B%BE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="AI-科研绘图学习笔记"><a href="#AI-科研绘图学习笔记" class="headerlink" title="AI-科研绘图学习笔记"></a>AI-科研绘图学习笔记</h1><p>最近由于论文中需要比较高清的图片，所以学习了一下这个软件，做了一些笔记，以备不时之需。</p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><ul><li>AI全称为illustrator——主要是针对矢量图；ps全称为photoshop——-主要用于位图文件的处理。</li><li>科研论文中，由于需要的像素一般比较高，并且放大的时候，不太想让图片发生变化，尤其是清晰度的变化，通常我们会常采用位图作为我们的论文图片，这个时候，我们就可以采用AI这个软件进行图片处理。</li><li>推荐B站视频：up主吃不胖的衰哥，讲的通俗易懂，鸣谢！同时推荐 <a href="https://www.bilibili.com/video/BV1HN4y1j7rm/?spm_id_from=333.788&amp;vd_source=01515d56c784f6d7c993232073105249">Ai科研绘图-第11讲（多图排版）_哔哩哔哩_bilibili</a></li><li><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3></li><li>创建文档：创建空白文档——&gt;设置长宽高——-&gt;一般采用rgb颜色格式，由于通常会有色差；</li><li>设置模式——右上角设置为传统基本模式——-功能面板都可以随便移动—-可以调整好一个合适的位置，之后使用都可以保存好自己的使用习惯；</li><li>windows系统的常用快捷键：ALT+鼠标滚轮——缩放；CTRL+鼠标滚轮——左右移动；</li><li>经常使用的黑色：“#333333”，矩形等规则形状的绘制主要是采用矩形工具等，可以拖住圆角，使得尖角矩形变成圆角矩形，并且很好用。</li><li>图层：图层界面可以很好的将将原来的图片进行锁定，并且很好地调整图片地清晰度，方便对原来地图片进行清晰度地设置，</li><li>箭头地绘制：主要是采用矩形工具先绘制一个矩形——&gt;采用剪刀工具——&gt;对路径进行剪切，采用直接选择工具(A)进行选中部分地路径——-&gt;采用delete键进行删除———&gt;在描边地选项中增加箭头，并且可以调整箭头地大小等；</li><li>对于字体地选择也有一定的说法：英文字体，通常采用Arial;而中文字体通常采用宋体（衬线体），微软雅黑（非衬线体），字体大小为7pt;无论是字体大小还是线条的粗细等可以量化的工具，都可以采用点击数据框，然后用鼠标滚轮的方法进行调整。</li><li>如果是临摹，通常需要采用画板工具调整画板地大小，并且采用左上角地标签，进行画板地复制。</li><li>左上标以及右下标：尤其是绘制一些酸根离子，比如硫酸根，需要先将24-变成上下标，随后再在右边地面板对他们之间地间距进行调整———-所选文字地字距调整以及所选文字地自居微调。</li><li>保存：1.如果期刊会接受ai格式，就直接保存为ai格式；如果不接受，那么就可以直接保存为pdf格式。2.保存为其他格式：比如tif格式，需要调整分辨率为600 ppi，并且勾选“LZW压缩”（极大地降低图片地大小）；</li><li>直线段工具——enter键——-调整长度可以用于衡量碱基个数或者氨基酸地个数</li><li>对齐工具：1.先选择对象——右边面板——具备居中对齐等；2.对齐关键对象—-全选——选中需要对齐地关键对象——采用对齐地方式。</li><li>对象均匀分布：主要是先调整对象的分布范围———采用分布对象下面的分布方式——-均匀分布用的很多。</li><li>渐变色填充——-线性渐变/径向渐变/形状渐变———-点击渐变滑块可以用吸管工具进行提取渐变的颜色。</li><li>特殊图形的绘制：shift+椭圆工具———&gt;圆形；shift+矩形——-&gt;正方形；</li><li>小技巧：画一个图形，比如椭圆，可以按住鼠标左键不松动的情况下，按住空格键，随椭圆进行随意的拖动；并且可以在另外一块相同空白的画板中，点击一下，选择编辑——-就地粘贴——-可以将绘制的图形粘贴在原来图片中一样的位置。</li><li>绘制细胞膜结构：1.对象——&gt;路径——-&gt;偏移路径——-&gt;设置填充色；2.选中图形——扩展—扩展描边——-可以直接将线段变成一个很好的形状，于是就可以进行调整颜色。选中扩展的图形——-效果—-风格化——内发光——采用合适的模式，不透明度以及模糊程度可以调整向边缘向内扩展；二次寻找——窗口——-外观面板——内发光。</li><li>铅笔工具———修改平滑程度———勾选“编辑所选路径”——-可以用于绘制曲线——-一般会采用模板的方法——-如果在一个很好的路径上采用铅笔工具，可以直接改变原来的图形，一般可以用于绘制不规则的矩形。</li><li>变形工具——-enter键调整参数，主要是其强度设置的大一点——-选中需要改变的图形——-按住鼠标左键———-随后可以很很好地对规则的图形进行变换；</li><li>源头箭头虚线箭头的绘制方法———与实线的箭头相似——-主要是描边的选项中——勾选虚线——-随后采用宽度等参数调整就可以/圆点箭头：描边选项中——-更改为圆头端点——虚线长度设置为0——-就可以绘制出来。</li><li>钢笔工具：绘制折线——-端点处点击——按住shift,拖动并且绘制下一个点，就会是一条直线，并且可以转弯——画完之后可以直接采用esc退出钢笔工具。</li><li>渐变色改变：可以调整渐变球，使得发光的中心不一定是图形中心；</li><li>锚点工具：主要是可以固定其中一个锚点，随后可以用选择工具，对尖角度的图形进行绘制。</li><li>波纹形状：效果—-扭曲和变换——-波纹工具——可以调整一些参数以绘制想要的效果——-但是还是原型路径——于是需要扩展外观—-使得路径为波纹的形状，之后才可以对形状进行编辑。</li><li>路径查找器：窗口—-路径查找器——联集—-注意这个操作针对的所有的图形，而不是路径，路径的话需要进行扩展才可以。</li><li>绘制细胞核：铅笔工具——绘制一条直线——采用宽度变形工具——-按住鼠标左键拖动白色菱形块——可以调整线条每个部分的宽度。</li><li>粗糙的不规则形状———-效果—-扭曲和变换——-粗糙化——-调整大小等参数以便于符合自己绘制的图形——-扩展外观—-随后就是一个不规则的图形了，可以进行编辑。</li><li>绘制多边形——-采用多边形工具——-按住鼠标不放—-采用上下键可以调整边数的大小。</li><li>磷脂双分子层的绘制：找出重复单元——双层（其中一个采用右键——变形—-镜像—-垂直镜像）———采用画笔工具——-将重复单元拖动到画笔工具中———密集的主要是采用图案画笔——当然如果是分散的可以是散点画笔—-图案画笔可以调整重复单元的形状，适应路径进行一定的调整以及改变，但是散点画笔不行。</li><li>曲率工具：跟钢笔工具有点像，但是只能是简易版本，绘制很多的曲线是相当方便的。</li><li>偏移路径：主要是可以在原来的基础上，生成一个稍微大一点的图形，中心是一致的。</li><li>比例缩放工具：可以选中两个锚点，拖动其中一个锚点，但是可以使得来两个锚点同时向里面等比例缩小，可以用于绘制宽度不等的矩形；</li><li>特殊字符的输入：1.采用插入的方法；2.采用输入法中自带的，比如alpha—α；</li><li>DNA的绘制：直线工具绘制直线——-波纹效果—-平滑——-对象，扩展外观—-alt键，拖动，复制一条一摸一样的图形——-直接选择工具——选中两个锚点——右键，连接（ctrl+j）——-采用垂直镜像拷贝———调整距离，使得两个图形形成一个波纹——-深色的采用排列，置于底层（ctrl+左中括号）——-随后可通过复制的方法将将DNA进行重复，绘制不同长度的DNA链段，但是需要调整图层顺序，通过选择左右复制就可以很好的改变调整图层的问题。</li><li>切除核酸链：1.采用美工刀——-选中需要切除的部分——-删除即可。2.铅笔工具——画出弧线——选中整个部分——采用路径查找器—-分割—-于是就成为了两部分。</li><li>绘制多种多样的DNA：找到基本重复单元——需要将头尾添加，复制三个矩形框——-一个矩形框框向最左边拖住边，作为头———一个矩形框向右边移动，选中尾部————得到每一部分框选的图形（右键——建立剪切蒙版——对象，扩展——-路径查找器（裁剪）），每一个框都是一样的操作———其中一定要确保高度是一致的矩形框；随后将三个边框都托进图案画笔中，期待你重点也是直接拖进对应的各自格子中就好了；采用现有的画笔——画笔工具——三条横线——打开画笔库——其他库—-打开画笔文件—-直接拖进画笔工具的设置框就可以，就可以使用之前建立好的画笔工具，而不需要重新绘制；</li><li>标尺：ctrl+R——-鼠标按住，脱出标尺，方便对齐—-不需要之后delete删除；</li><li>绘制剪刀———采用一个矩形—-直接选择工具——调整角度——绘制一个 圆形，调整角度——-采用铅笔工具，采用宽度工具，调整其每个位置的粗细——扩展，合并图形——绘制一个圆——将圆放进形状的中心——-直接选中整个图图形——-选择镜像旋转——将镜像旋转中心拖动到圆心处——按住alt键，直接拖动图形，快速复制出剪刀的另外一半；</li><li>推荐采用阿里巴巴矢量图库，可以换用不一样的颜色，同时也可以采用不一样的矢量图，复制svg代码，就可以直接导入到aiZ中，可以节省时间。</li><li>线段的渐变色设置：打开渐变面板——将描边放置在上方——直线渐变——-将描边选择为沿描边应用渐变——同样的调整渐变色的端点即可。</li><li>剪断某个东西，分为几部分：主要是可以次啊用美工刀，特别好用，可以直接是很平整的直线；</li><li>画板：图形如果在画板外，保存图片时，外面的图案都不会具备显示。</li><li>三个协助绘图的网站：注意版权问题啥的，BioRender[<a href="https://biorender.com">https://biorender.com</a>] ;Figdraw[<a href="https://www.figdraw.com]；">https://www.figdraw.com]；</a> SMART[<a href="https://smart.servier.com]；第三个网站，完全是免费的。">https://smart.servier.com]；第三个网站，完全是免费的。</a></li><li>快捷工具的所有的操作都是在英文输入法中的，由于shift键非常常用，切换输入法的按键，通常会改变，多用就会熟悉。</li><li>增加外轮廓：主要是会复制另外一个没有填充，只有描边的图形，作为外部的轮廓，然后采用对齐工具对齐，就可以得到描边的组合图；</li><li>线段描边：1.采用扩展—-填充，描边色设置；2.采用窗口—-外观—-选择项中有一个新描边工具。</li><li>图形样式的方法：在外观面板中，边上有一个图形，可以将设置好的图形拖进去，随后绘制的相似的设置方法，可以将采用这个图形工具，省时又省力，有点像画笔工具。</li><li>单种颜色渐变：只选用一种颜色，将不透明度从100%设置到0%。</li><li>半开口状态：1.单个图形，将边缘用剪刀工具剪开切口；2.复制另外一个图形，分为填充跟描边分开，然后选择描边以及填充哪个在前面，随后也是采用剪刀工具进行剪切口；</li><li>图形排布的先后顺序：ctrl+x/ctrl+f,采用剪切以及贴在前面的方法；调整好之后一般会采用ctrl+g进行编组，方便整体处理；</li><li>钢笔工具：会使用的话，可以绘制所有图形。先调整一下设置，编辑——首选项———选择和锚点显示——-打开设置窗口——-将鼠标移过时突出显示锚点等复选框都勾选上。</li><li>钢笔状态：无任何标识——绘制期间；开始绘制新路径——※；添加锚点——(+)；删除锚点——-(-)；闭合路径——(⭕)；连接已有路径——(/)；转换终点类型——-(^);</li><li>锚点的添加以及删除：添加主要是将工具放在路径上；删除主要是将工具放在锚点处；</li><li>常用的钢笔工具快捷键：alt键+鼠标左键——-作用于锚点，可以转换锚点类型；作用于手柄，可以很好的调整曲线的曲率等；作用于路径，可以很好的对形状进行改变，称为重塑工具；</li><li>练习钢笔工具的一个网站：[<a href="https://bezier.method.ac/">https://bezier.method.ac/</a>]</li><li>钢笔技巧：需要将尽可能多的锚点手柄放在水平或者竖直位置，由于按住shift键，可以保证手柄水平或者竖直，方便调整角度以及曲线曲率；</li><li>绘制平滑曲线：曲率工具/钢笔工具/铅笔工具，三这都可以，但是比较推荐曲率工具；</li><li>平滑处理：采用平滑工具，进行多次平滑处理，知道满意为止；</li><li>阴影效果：1.通常采用两个图形进行叠加———选中两个图形——-采用路径查找器，减去顶层——随后设置颜色以及描边；2.采用两个图形之间取交集——-图形叠加——-路径查找器——取交集—-得到阴影部分的图形；3.采用剪切蒙版法则：位于上方的图形可以是一个容器，当其作为剪切蒙版的剪切路径时，位于其下方的东西，只能在其限定范围内显示，框选两个图形——右键建立剪切蒙版（CTRL + 7）——上方的图形可以在右侧的剪切蒙版剪切组添加颜色以及描边，并且单独选中某个图形的路径还可以进行移动，编辑；总体杀那个来说，剪切蒙版的功能更加强大；</li><li>内部绘图：1.背景色等调整框下，调整内部绘图模式，就可以采用各种工具对图形进行改变；2.形状生成器工具（shift+M）——可以将两个图形中的各个色块进行合并或者删除（＋alt键），并且可以直接移动某一部分—-一般是闭合的区域，不闭合的话可以调整设置面板（enter键）——设置间隔为大；</li><li>实时上色工具——针对对象的封闭区域，进行填充颜色——可以借助取色笔对填充颜色进行选择；</li><li>实时上色选择工具（shift+L）：可以选择图形中的每一个边，只要是相交处就可以，所以可以很好地对每一条边进行设置，并且可以调整他们的颜色，或者对他们进行选择更改；该工具还可以很好的对轮廓线进行拖动调整，并且不会改变图形的填充色等，具备很好地扩展性；但是如果需要调整描边以及填充色就需要对图形继续宁扩展；</li><li>病毒包膜：1.偏移路径法；2.外观面板—-设置新的描边——调整不一样的宽度就可以；</li><li>均匀复制一圈：选中对象——选择旋转工具——-将旋转中心拖着放入圆心——-采用enter键对旋转角度进行设置———确定——ctrl+D可以重复多次操作；</li><li>新版的2022版ai:1.绘制圆形的重复图案：对象—-重复—径向；2.绘制矩形图案：采用对象——重复—-网格；3.绘制镜像：对象—-重复—-镜像；这些功能都可以对绘制之后的图形进行拖动边框等调整对旋转中心、重复单元数量进行基本的调整；</li><li>散点画笔：可以绘制重复单元沿着曲线不规则分布的形状；</li><li>混合工具：1.切换为混合工具——先后单击起始的图形以及结束的图形——图形会变成混合对象——enter键打开设置框可以对过渡单元的个数进行调整；2.双击混合对象—-进入到混合对象内部，可以对图形整体进行随意调整；3.采用选择工具—-选中混合轴—-可以对图形进行拖动修改；3.框选混合对象以及线段路径——-选择对象——混合—-替换混合轴—-可以实现混合的各个图形沿着自己绘制的曲线进行变换，后面需要将自己复制的线段路径重新粘贴回来，否则替换之后只有混合图形——-选中之后，对象—-扩展—-取消编组或者双击静茹编组内部，就可以对整个图形进行调整；</li><li>斑点画笔工具：直接绘制的时一个图形而不是一个路径；<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3></li><li>AI还是很强大的，基本上大多数图片都可以通过该软件进行实现，科研人必备，挺实用的；</li><li>绘制时，可以根据自己的喜好，对一些方法进行选择性的适应，没必要局限于某种方法，可以实现自己的需求才是最重要的；</li><li>必要时，可以借助一些网站，以便于帮助我们更快的实现我们的需要，而不必要都是自己手把手的绘制；</li><li>学习是永无止境的，后续有空还是会学习这款软件以及其他知识，并且分享给大家。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 必备技能 </tag>
            
            <tag> illustrator </tag>
            
            <tag> 科研绘图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zotero+obsidian+scispace提升科研论文阅读效率</title>
      <link href="/2023/02/25/zotero-obsidian-scispace%E6%8F%90%E5%8D%87%E7%A7%91%E7%A0%94%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E6%95%88%E7%8E%87/"/>
      <url>/2023/02/25/zotero-obsidian-scispace%E6%8F%90%E5%8D%87%E7%A7%91%E7%A0%94%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E6%95%88%E7%8E%87/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><ul><li>zotero是一款文献管理软件，之前一直使用endnote，但是发现有个问题是，其中导入文献不能直接与另外两个软件进行联用，因此就选用了zotero进行管理文档。</li><li>obsidian是一个小众化的笔记软件，再b站有详细教程<em>Johnny学OB</em>，可以将知识进行原子化，挺好用的，语法是markdown格式，可拓展性特别好，有许多开源的插件。</li><li>scispace主要是一个内嵌了阅读总结文献的机器人，是一个网页版的工具，阅读文献时，具备一定的辅助功能。</li></ul><h3 id="一、下载三个软件以及相应的插件"><a href="#一、下载三个软件以及相应的插件" class="headerlink" title="一、下载三个软件以及相应的插件"></a>一、下载三个软件以及相应的插件</h3><ol><li>zotero软件下载[[<a href="https://www.zotero.org]]，插件直接再浏览器的扩展中搜索zotero">https://www.zotero.org]]，插件直接再浏览器的扩展中搜索zotero</a> connect, 相应的插件分别为<strong>Better Bibtex</strong>下载地址为[[<a href="https://github.com/retorquere/zotero-better-bibtex]]；">https://github.com/retorquere/zotero-better-bibtex]]；</a></li><li>obsidian下载地址[[<a href="https://obsidian.md/download]]，其中的插件可以在第三方插件--&gt;社区插件---&gt;直接搜索(Citations),或者直接在网页中下载[[https://github.com/hans/obsidian-citation-plugin]]，然后将文件中三个文件分别为main.js/mainifest.json/styles.css直接在obsidian库文件夹.obsidian里面的plugins文件夹里新建一个citations文件夹，如果两个文件夹都没有则都重新建立；">https://obsidian.md/download]]，其中的插件可以在第三方插件--&gt;社区插件---&gt;直接搜索(Citations),或者直接在网页中下载[[https://github.com/hans/obsidian-citation-plugin]]，然后将文件中三个文件分别为main.js/mainifest.json/styles.css直接在obsidian库文件夹.obsidian里面的plugins文件夹里新建一个citations文件夹，如果两个文件夹都没有则都重新建立；</a></li><li>关于scispace相对来说比较简单，直接是网页版的，网址为[[<a href="https://typeset.io/]]，注册之后就可以直接使用了。">https://typeset.io/]]，注册之后就可以直接使用了。</a><h3 id="二、插件安装中的问题"><a href="#二、插件安装中的问题" class="headerlink" title="二、插件安装中的问题"></a>二、插件安装中的问题</h3></li><li>其中遇到一个很头疼的问题，就是大多数网上的教程都会让你生成JSON文件，也就是下图的1，但不知道为啥，我这边电脑采用JSON文件，插件直接显示不了，我也不知道是啥问题。我直接换用了下图中的2，也就是采用BIB格式，这个时候就可以直接识别到文件的地址了，其他的按照网上的教程来，只要是obsidian中的文件地址以及注释的地址没问题，就可以正常在obsidian中很好的使用了。<br>![[Pasted image 20230224143439.png]]</li><li>接下来就可以将你的文献从zotero导入到obsidian中做阅读笔记；然后可以将文献导入网页版的scispace帮辅性的解读。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献管理 </tag>
            
            <tag> 阅读 </tag>
            
            <tag> 笔记，效率 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dada-first-blog</title>
      <link href="/2023/02/20/Dada-first-blog/"/>
      <url>/2023/02/20/Dada-first-blog/</url>
      
        <content type="html"><![CDATA[<p>终于搭建好了自己的个人博客，可以将自己将近一年半的东西好好整理，并且放进这个大仓库中了。</p><p>后期将会在个人博客陆续发布一些python学习踩过的坑，以及个人学习的笔记整理，包括python基础，网络爬虫，机器学习等，希望大家一起学习交流。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PPT设计思维</title>
      <link href="/2023/02/20/PPT%E8%AE%BE%E8%AE%A1%E6%80%9D%E7%BB%B4/"/>
      <url>/2023/02/20/PPT%E8%AE%BE%E8%AE%A1%E6%80%9D%E7%BB%B4/</url>
      
        <content type="html"><![CDATA[<h1 id="PPT设计思维"><a href="#PPT设计思维" class="headerlink" title="PPT设计思维"></a>PPT设计思维</h1><h2 id="1-幻灯片设计前的内容梳理"><a href="#1-幻灯片设计前的内容梳理" class="headerlink" title="1.幻灯片设计前的内容梳理"></a>1.幻灯片设计前的内容梳理</h2><h4 id="1-1-文字应该多一点还是少一点好？"><a href="#1-1-文字应该多一点还是少一点好？" class="headerlink" title="1.1 文字应该多一点还是少一点好？"></a>1.1 文字应该多一点还是少一点好？</h4><p>一般而言，幻灯片分为两类，第一类是配合演讲使用的，这类幻灯片应该简约。字少图多，动画炫。第二类是阅读性的，比如咨询公司的行业分析报告。该类PPT应该写的尽可能详细，并且可以满足逻辑上的自洽性。</p><h4 id="1-2-幻灯片内容准备的三个步骤"><a href="#1-2-幻灯片内容准备的三个步骤" class="headerlink" title="1.2 幻灯片内容准备的三个步骤"></a>1.2 幻灯片内容准备的三个步骤</h4><p>1.明确内容表达的逻辑关系；<br>2.通过思维导图构建内容框架；<br>3.采用论据支撑论点的方式填充内容</p><h4 id="1-3-一个完整的PPT包含的部分"><a href="#1-3-一个完整的PPT包含的部分" class="headerlink" title="1.3 一个完整的PPT包含的部分"></a>1.3 一个完整的PPT包含的部分</h4><p>一份完整的幻灯片通常包含封面、目录、提示页、内容页以及封底五部分，其中提示页的数量由目录的数量决定。</p><h2 id="2-幻灯片操作术"><a href="#2-幻灯片操作术" class="headerlink" title="2.幻灯片操作术"></a>2.幻灯片操作术</h2><h4 id="2-1-关于形状的不为人知的功能"><a href="#2-1-关于形状的不为人知的功能" class="headerlink" title="2.1 关于形状的不为人知的功能"></a>2.1 关于形状的不为人知的功能</h4><p>1.突出重点的文字内容：于文字底部插入一个颜色反差比较大的形状/利用纯色图形覆盖图片（调整透明度为0.25）的方式，使得文字可以显示在图片上。<br>2.规整化不统一的元素：遇到不一样的logo时，采用统一形状将将他们框起来，显示干净整洁。（类似于收集的APP收集工具）<br>3.形象地表达内容之间的逻辑关系：点线组合构成时间线、金字塔表现内容之间的层级关系。</p><h4 id="2-2-如何让幻灯片中的文字更加美观"><a href="#2-2-如何让幻灯片中的文字更加美观" class="headerlink" title="2.2 如何让幻灯片中的文字更加美观"></a>2.2 如何让幻灯片中的文字更加美观</h4><p>一、针对大段文字而言<br>1.调整段落字体，并且选择合适的字体行间距（1.5倍）。一般选用微软雅黑、冬青黑体、思源黑体。<br>2.使用灰色，尽量不要使用纯黑色。由于黑色是一种生硬的感觉，但是采用深灰色却显得更加温和。<br>二、对于一些需要经过特殊处理的文字而言<br>1.使用文字填充，选择笔画更加粗的字体，随后采用设置文字填充效果，文本填充中的图片或者纹理填充，上传相应的图片即可。<br>2.利用三维模式：选择一个笔画较粗的字体，选中文字内容，右键，快捷菜单中选择文字效果格式，在“文本选项中”，找到三维旋转，在预设的格式中，选择前透视，在三维格式中，将透视深度设置为60磅；为了使得字体具备金属质感，还需要选择图片填充效果为图片，采用一张具备金属质感的图片就可以了。<br>三、想让图片满足幻灯片，需要知道以下几点<br>1.调整尺寸：采用裁剪，调整裁剪比的方式，形成可以正好覆盖整张ppt的图片。<br>2.将四张大小不同的图片转化为大小相同的四个不同圆形：主要是全选照片，采用裁剪图行为形状，随后在格式中的排列，选择“顶端对齐”，将图形拉至底部对齐，就可以成为大小一致的图片了。<br>3.更改图片的背景色：如果是纯色，直接采用“格式”选项中，采用颜色选项，设置为“透明色”；如果不是纯色，则需要采用“格式”选项中的“删除背景”选项，删除紫色区域的部分；如果需要为图片添加边框，直接在“图片边框”中，选择边框颜色即可。<br>4.将图片都处理成灰色，类似于为图片整体添加滤镜，“格式”——&gt;“颜色”，选择一种颜色即可。<br>5.图片模糊：选中图片，设置图片格式，出现的设置框中，设置艺术效果；艺术效果中，选择虚化，并且将其半径设置为90.<br>6.添加阴影：选中图片，单击格式，在“图片效果”选项中，选择阴影，为了让推按更加立体，可以考虑左透视阴影的效果。<br>注意：为了使得设置统一，一般需要采用“图片样式’中一键添加。<br>四、如何在幻灯片中使用特殊字符<br>最主要是采用“插入”功能。<br>五、音频在幻灯片中的作用<br>1.抒发感情型的演讲气氛渲染：通常需要在幻灯片中加入背景音乐，一般采用钢琴曲，否则会喧宾夺主，只需要擦还如音频后，直接后台播放就好。同时，PPT中还具有音频剪辑功能，我们可以对音频进行剪辑。<br>2.还原对话内容，表现出真实性：采用放映本页幻灯片时，自动播放某一段录音，主要是将开始方式由“单击时”更改为“自动”，并且勾选“放映时隐藏”，就可以实现这个功能。<br>六、如何利用视频来增强演示的表现力<br>1.奠定演讲基调；2.辅助说明一些具体问题。<br>七、如何才能快速地调整PPT页面中地元素层级关系<br>1.弄清图层关系，了解各个层级的先后关系；<br>2.当层级关系很多时，可以采用“开始”中的“选择”，里面有一个“选择页面”。<br>八、如何快速实现元素的对齐效果<br>“开始”中的“排列”选项，在“对齐方式”中，选择“左对齐”。<br>九、如何copy其他元素的特效<br>采用格式刷可以实现文字、形状、图形格式的统一。<br>十、如何精确地确定元素在页面中的位置关系<br>1.用来确定页面的中轴线：采用”视图“中的参考线或者网格线功能。<br>2.智能参考线功能：”视图选项卡“中，单击显示右下角的箭头，在出现的设置框中，勾选”形状对齐时显示智能导向功能“。此后我们任意挪动任意图文都会自动出现下面的参考线，告知你元素之间的位置关系以及极爱那句是否相等。<br>十一、如何快速统一页面背景<br>找到任意一张PPT的空白处，右键找到其中的”设置背景格式“——&gt;”应用到全部“，就可以实现全部统一背景。<br>十二、选择适合投影仪屏幕的页面尺寸<br>1.最常见的时16：9（铺满大多数电脑显示屏）以及4：3（铺满大多数投影仪屏幕），于”设计“页面中的”幻灯片大小“调整尺寸大小。<br>2.演讲发布会常用的页面尺寸，一般是2.35：1，注意投影仪跟幻灯片的大小符合等比规则。<br>3.页面尺寸修改过程中可能出现的问题：当采用16：9的页面修改为4：3的尺寸时，一般可以选择”确保合适“，那么幻灯片中的很多图片等都会相应的缩小，只是部分的位置发生了改变。<br>十三、如何让页面上的内容看起来更加具备条理性<br>1.在每个要点前面添加上一个符号，也可直接添加上一个符号。<br>十四、图表使用指南<br>1.选择合适的选择图表类型；2.图标使用规范：（1）ppt中使用实线；使用面积图应该对面积图进行透明化处理，才能看清楚后面的数据；（2）对数据严谨的条件下，不要使用立体图表格，精良使用平面图表；（3）数据差异不大时，不适用饼图做对照，通常采用柱状图进行对照；（4）使用饼图：最大份额从十二点钟方向顺时针方向开始，不能具有丝毫偏差，并且尽量从大到小进行排列；（5）使用气泡图表示倍数关系时，应该采用合适的背书关系；（6）纵坐标的起始数据要从0开始，不要擅自修改数据的起始数据；柱状图的间距应该合适，应该在宽度的50%-80%；（7）不要随意删除图表中所含有的内容，包括图例，数据标签等；（8）数据之间如果需要对比，需要采用不同的颜色进行区分，并且需要选择对比色。</p><h2 id="3-动画在幻灯片中的三大作用"><a href="#3-动画在幻灯片中的三大作用" class="headerlink" title="3.动画在幻灯片中的三大作用"></a>3.动画在幻灯片中的三大作用</h2><h4 id="3-1-认识幻灯片动画"><a href="#3-1-认识幻灯片动画" class="headerlink" title="3.1 认识幻灯片动画"></a>3.1 认识幻灯片动画</h4><p>1.模拟物理世界的动作效果：其中具备多种动画切换的效果，这也是整个软件整体的效果。<br>2.用来吸引观众的注意力：采用一些动画进行展示重点<br>3.动画可以使得元素被间隔显示<br>4.动画使用常见的三个错误<br>（1.动画的数量问题：使用合适的动画量，由于动画的量太多的话，会直接影响到演讲时间。（2.一致性问题：为同一页幻灯片的同一元素添加动画效果，往往需要添加同一种动画效果，否则会显得格格不入。（3.动画的复杂程度问题：网络上有一些教程，专门教人家复杂酷炫的动画，对于普通人来说，似乎是没啥用的。</p><h4 id="3-2-动画刷"><a href="#3-2-动画刷" class="headerlink" title="3.2 动画刷"></a>3.2 动画刷</h4><p>可以使得同一页的元素，具备同样的动画效果，方便统一动画效果。</p><h2 id="4-幻灯片设计美化"><a href="#4-幻灯片设计美化" class="headerlink" title="4. 幻灯片设计美化"></a>4. 幻灯片设计美化</h2><h3 id="4-1-选择恰当的字体"><a href="#4-1-选择恰当的字体" class="headerlink" title="4.1 选择恰当的字体"></a>4.1 选择恰当的字体</h3><p>三方面考虑：1.考虑阅读的需要，推荐思源黑体、思源宋体，一份PPT不能超过两中字体；2.考虑到排版的需要：标题使用更粗的字体，但是正文一般选择更细的字体。粗细字体搭配通常会显得排版更加美观，除了微软雅黑，其他的字体不要认为的加粗，每一款字体在设计之初，都是具备一定得美学理念。3.考虑到场景需要：字体较粗的字体一般表现力量、男性、稳重等内容的场景下。而书法字体一般表现为浩方挥洒、个性化、自信等场景。我们可以参考电影海报中选用字体的标准进行表达整个PPT的内容宗旨。4.找对合适的字体：字体网（<a href="https://www.qiuziti.com">https://www.qiuziti.com</a>)</p><h4 id="4-2-配色凸显专业性"><a href="#4-2-配色凸显专业性" class="headerlink" title="4.2 配色凸显专业性"></a>4.2 配色凸显专业性</h4><p>整体的PPT如果说是色彩鲜艳，重点醒目可以说是非常丑陋。如果说是配色称得上不错，那么会是非常不错的。整体上画面简洁优雅，色彩使用方面非常克制。</p><ol><li>摆脱脏乱差，如何采用打造美观的配色方案<br>从主题的契合度、易识别性、色调一致性以及可拍摄性判断。<br>（1）主题：红色代表热情；深蓝色代表沉稳的态度；不同的颜色带给别人不一样的心理感受。<br>（2）易识别性：让页面上的内容可以被听众很容易看得清楚。<br>（3）色调一致性：确保一整套PPT采用统一的色调，否则会使得PPT看起来特别丑。<br>（4）可拍摄性：幻灯片背景色尽量使用深色，以保证可以更好地拍摄效果。</li><li>如何去确定主题色<br>（1）企业VI（视觉识别）的配色：比如使用京东时，自然而然会想到京东红。<br>（2）自定义的场景需求：如果想要采用颜色来调控幻灯片的表现感觉，通常可以采用千图网印象配色工具。</li><li>如何确定配色方案<br>（1）单色系色调一致：采用不同明度的颜色，以保证单色系。确定不同明度的颜色，利用网站materia palette.<br>(2)多色系明度一致：如果PPT中使用了三种颜色，那么着三种颜色采用的明度需要时一致的。网站，colorhunt(<a href="https://colorhunt.co/">Color Palettes for Designers and Artists - Color Hunt</a>),</li><li>灰色在幻灯片中的两个作用：（1）凸显内容：对于非重点内容进行隐藏；（2）凸显局部重点内容。<br>注意：当不知道颜色的色值，通常需要采用截图工具，先将颜色区域存成照片，放在幻灯片页面，然后用取色器进行精准获取该颜色。</li></ol><h4 id="4-3-专业的PPT设计师如何找图"><a href="#4-3-专业的PPT设计师如何找图" class="headerlink" title="4.3 专业的PPT设计师如何找图"></a>4.3 专业的PPT设计师如何找图</h4><p>采用大型的图库，比如百度图库、360图库等等。</p><ol><li>对于页面中单张图片的考量:最基本的要求是高清、没有水印，如果还需要更加高清，会牵扯到图片的创意。</li><li>对于整套幻灯片中的配图而言：配图要求在风格上能保持统一。我们可以使用实物、插画7或者扁平化的图标。</li></ol><h5 id="4-3-1-学会使用识图工具"><a href="#4-3-1-学会使用识图工具" class="headerlink" title="4.3.1 学会使用识图工具"></a>4.3.1 学会使用识图工具</h5><ol><li>采用百度识图，如有一些有水印的图片，直接下载到本地，随后再采用浏览器的识图工具，找到更加高清并且没有水印的照片。</li></ol><h5 id="4-3-2-去专业的图库寻找图片"><a href="#4-3-2-去专业的图库寻找图片" class="headerlink" title="4.3.2 去专业的图库寻找图片"></a>4.3.2 去专业的图库寻找图片</h5><p>一般具备三个网站，分别是(1)Pixabay(<a href="https://dd.mgkjdzsw.cn/);(2)全景网(https://quanjing.com/)；（3）500PX(https://500px.com.cn/">https://dd.mgkjdzsw.cn/);(2)全景网(https://quanjing.com/)；（3）500PX(https://500px.com.cn/</a>).</p><h5 id="4-3-3-矢量图资源"><a href="#4-3-3-矢量图资源" class="headerlink" title="4.3.3 矢量图资源"></a>4.3.3 矢量图资源</h5><p>主要来源分为两点：阿里巴巴矢量图标库(<a href="https://www.iconfont.cn/)；easyicon(https://www.aigei.com/">https://www.iconfont.cn/)；easyicon(https://www.aigei.com/</a>),</p><h4 id="4-4-幻灯片背景选择的四大原则"><a href="#4-4-幻灯片背景选择的四大原则" class="headerlink" title="4.4 幻灯片背景选择的四大原则"></a>4.4 幻灯片背景选择的四大原则</h4><ol><li>要确保背景不会阻碍内容的传递；</li><li>能跟主题内容相关更好；</li><li>考虑到配色问题；</li><li>考虑演讲的场景。</li></ol><h4 id="4-5-PPT高手与小白在图文排版上的差别"><a href="#4-5-PPT高手与小白在图文排版上的差别" class="headerlink" title="4.5 PPT高手与小白在图文排版上的差别"></a>4.5 PPT高手与小白在图文排版上的差别</h4><h5 id="4-5-1-对齐让版面更加清爽"><a href="#4-5-1-对齐让版面更加清爽" class="headerlink" title="4.5.1 对齐让版面更加清爽"></a>4.5.1 对齐让版面更加清爽</h5><p>通常会使得图文进行对齐排版，图片于文段左边，采用左对齐；图片位于文段顶端时，采用居中对齐的方式；当图文在文段右边时，采用右对齐的方式。</p><h5 id="4-5-2-对比突出焦点"><a href="#4-5-2-对比突出焦点" class="headerlink" title="4.5.2 对比突出焦点"></a>4.5.2 对比突出焦点</h5><p>排版时，为了让段落中的重点内容更加醒目，我们需要将重点内容以及非重点内容产生对比感。</p><ol><li>大小对比：标题大于正文选用的字号；</li><li>颜色对比：特别重点的内容采用不同的内容表示时，只能够采用一种颜色，不要采用多种颜色进行替换。</li><li>粗细对比：不仅可以凸显重点内容，还可以使得排版看起来更加具有层次感。</li><li>衬底对比：为了使得重点内容更加突出。</li></ol><h5 id="4-5-3平衡让版式更加和谐"><a href="#4-5-3平衡让版式更加和谐" class="headerlink" title="4.5.3平衡让版式更加和谐"></a>4.5.3平衡让版式更加和谐</h5><ol><li>中心对称：当页面当中只是具备一张图片或者一张图片时，可以采用页面放在中心来使得视觉平衡。</li><li>左右对称：如果页面存在多个元素，需要沿着中轴线，来排列页面左右两侧的位置；</li><li>上下对称：当页面上半部分出现一些元素，相应地应该下半部分也填充一些元素。</li><li>对角线对称：当页面左（右）下角出现一些元素时，需要在右（左）上角类似填充对等的内容，以维持视觉平衡。<br>注意：全图片性的PPT需要将内容放在非中心部分，以此达到平衡的目的。<br>小结：对齐是为了让页面看起里更加整齐；对比是为了体现层次感，让重点内容更加突出；平衡是为了确定页面元素的位置关系，使其看起来更加和谐。</li></ol><h4 id="4-6-封面设计的万能公式"><a href="#4-6-封面设计的万能公式" class="headerlink" title="4.6 封面设计的万能公式"></a>4.6 封面设计的万能公式</h4><h5 id="4-6-1-没有背景图的封面"><a href="#4-6-1-没有背景图的封面" class="headerlink" title="4.6.1 没有背景图的封面"></a>4.6.1 没有背景图的封面</h5><ol><li>左右结构的设计：LOGO在左，内容子右；</li><li>上下结构的设计：LOGO在上，内容在下；</li></ol><h5 id="4-6-2-利用形状设计的封面"><a href="#4-6-2-利用形状设计的封面" class="headerlink" title="4.6.2 利用形状设计的封面"></a>4.6.2 利用形状设计的封面</h5><p>1.拦腰的形状；2.页面中心的形状；</p><h5 id="4-6-3-有背景图的封面"><a href="#4-6-3-有背景图的封面" class="headerlink" title="4.6.3 有背景图的封面"></a>4.6.3 有背景图的封面</h5><ol><li>左图右文的结构，个占据一般的页面；</li><li>全背景图的封面：文字内容应放在页面中心</li><li>封面型的样式：要求背景图的焦点在右，内容在左，以形成视觉冲击。</li><li>封面样式也属于全图型：焦点在左，内容在右，同样是视觉平衡角度来看。</li><li>半图型封面设计：图片以及内容各占一半，目的是视觉平衡。</li></ol><h4 id="4-7-PPT高手跟小白设计图表时，有啥区别"><a href="#4-7-PPT高手跟小白设计图表时，有啥区别" class="headerlink" title="4.7 PPT高手跟小白设计图表时，有啥区别"></a>4.7 PPT高手跟小白设计图表时，有啥区别</h4><h5 id="4-7-1-图表美化的三板斧"><a href="#4-7-1-图表美化的三板斧" class="headerlink" title="4.7.1 图表美化的三板斧"></a>4.7.1 图表美化的三板斧</h5><ol><li>配色方案：保证色彩统一，不要选取配色方案之外的颜色，这样子可以显得整体统一，具有设计感；同时降低用户查看图表的认知成本。</li><li>图表类型的更替：其中每种类型的图表，都具备很多的样式。</li></ol><h5 id="4-7-2-信息图表的运用"><a href="#4-7-2-信息图表的运用" class="headerlink" title="4.7.2 信息图表的运用"></a>4.7.2 信息图表的运用</h5><ol><li>采用图片填充的形式设计信息图表：采用小图标进行“图片填充”柱状图，同时采用勾选层叠选项。</li><li>利用特殊数值的设定来设计信息图表：设计多重的空心图表，添加列值就可以了。</li></ol><h2 id="5-关于模板"><a href="#5-关于模板" class="headerlink" title="5. 关于模板"></a>5. 关于模板</h2><h4 id="5-1-模板寻找指南"><a href="#5-1-模板寻找指南" class="headerlink" title="5.1 模板寻找指南"></a>5.1 模板寻找指南</h4><ol><li>免费的模板资源：(1)微软官方资源（officeplus.cn）:模板比较漂亮，同时模板更加容易套用；（2）扑奔网（Pooban.com）:提供的模板数量较多，而且美观性上也属于上乘；（3）PPTfans,网站（pptfans.cn）:不仅具备很多模板，而且还具有很多有价值的学习资料。（4）优品PPT(ypppt.com):网站具有很多有内容的ppt，数量上为上乘。（5）逼格PPT(tretars.com):个人博客，数量不多，但是质量特别高。</li><li>收费模板资源：（1）pptStore(pptstore.net)；（2）演界网（yanj.cn）;</li></ol><h4 id="5-2-两个不可不知的模板使用技巧"><a href="#5-2-两个不可不知的模板使用技巧" class="headerlink" title="5.2 两个不可不知的模板使用技巧"></a>5.2 两个不可不知的模板使用技巧</h4><ol><li>修改页面上的固定元素：采母版对于整体的PPT进行修改。</li><li>了解母版的基本使用技巧，图形主要是用幻灯片大小边上的隐藏背景图形进行。</li></ol><h2 id="6-幻灯片的多样呈现"><a href="#6-幻灯片的多样呈现" class="headerlink" title="6.幻灯片的多样呈现"></a>6.幻灯片的多样呈现</h2><h4 id="6-1-需要留意的保存细节"><a href="#6-1-需要留意的保存细节" class="headerlink" title="6.1 需要留意的保存细节"></a>6.1 需要留意的保存细节</h4><ol><li>检查兼容性：由于PPT的版本不一样，导致一些更加高级的操作在某些较低版本的PPT中无法很好地展示。进行这一步，可以很好地查看兼容性的问题。</li><li>如果在幻灯片中使用了外部嵌入的字体：点击“文件”，“选项”中对保存中的“将字体嵌入文件”进行勾选。</li><li>完成了着两件事之后，再对文件进行保存。</li></ol><h4 id="6-2-如何防止他人修改PPT"><a href="#6-2-如何防止他人修改PPT" class="headerlink" title="6.2 如何防止他人修改PPT"></a>6.2 如何防止他人修改PPT</h4><ol><li>设置密码：另存为PPT放映形式，随后直接采用“工具”中的常规选项，设置修改权限密码即可。</li></ol><h4 id="6-3-刷爆朋友圈的H5，怎么样采用ppt进行制作"><a href="#6-3-刷爆朋友圈的H5，怎么样采用ppt进行制作" class="headerlink" title="6.3 刷爆朋友圈的H5，怎么样采用ppt进行制作"></a>6.3 刷爆朋友圈的H5，怎么样采用ppt进行制作</h4><ol><li>设计H5页面：将页面尺寸设置为宽16.93cm,高为26.67cm,为了使得页面更加清晰，话可以扩大两倍。</li><li>添加内容：当页面尺寸设计好之后，可以将内容都添加上去，并且将幻灯片页面另存为图片格式。</li><li>生成划动内容：（1）易企秀；（2）MAKA:模板商城界面，单击新建空白页，进入操作后台；然后单击插入图片，直接将2中生成的H5页面进行上传，随后点击右上角的“保存/发布”按钮，此时网站会提供一个链接或者二维码，使用微信就可以进行查看。</li></ol><h4 id="6-4-采用ppt进行海报设计"><a href="#6-4-采用ppt进行海报设计" class="headerlink" title="6.4 采用ppt进行海报设计"></a>6.4 采用ppt进行海报设计</h4><p>如果页面不需要打印，并且对于像素的要求不高，设计好后，直接采用“另存为”，选择“PNG可移植网络图形格式”，单击“确定”，将ppt页面转化为图片。</p><h4 id="6-5-避免PPT演讲忘词，需要知道这个功能"><a href="#6-5-避免PPT演讲忘词，需要知道这个功能" class="headerlink" title="6.5 避免PPT演讲忘词，需要知道这个功能"></a>6.5 避免PPT演讲忘词，需要知道这个功能</h4><p>可以采用采用演讲者模式，进行使用。当电脑跟投影仪进行连接时，将投影方式设置为“扩展”，然后在“幻灯片放映”选项中，勾选使用演讲者视图，即可实现分屏效果。</p><h4 id="6-6-如何使用PowerPoint来制作视频"><a href="#6-6-如何使用PowerPoint来制作视频" class="headerlink" title="6.6 如何使用PowerPoint来制作视频"></a>6.6 如何使用PowerPoint来制作视频</h4><ol><li>直接设置换片时间，根据内容的多少，得到一个确切的数值；</li><li>将幻灯片文键另外存储为视频格式：选择MPEG-4视频，单击“确定”即可。</li></ol><h4 id="6-7-幻灯片放映时，可能需要的工具"><a href="#6-7-幻灯片放映时，可能需要的工具" class="headerlink" title="6.7 幻灯片放映时，可能需要的工具"></a>6.7 幻灯片放映时，可能需要的工具</h4><p>最常见的是翻页笔，如果场地wifi场地全覆盖的话，网上具有一个软件叫做“PPT遥控器”。</p><h2 id="附录A：推荐一些不为大众所知的软件“神器”"><a href="#附录A：推荐一些不为大众所知的软件“神器”" class="headerlink" title="附录A：推荐一些不为大众所知的软件“神器”"></a>附录A：推荐一些不为大众所知的软件“神器”</h2><ol><li>PhotoZoom Pro<br>可以直接使用该软件进行修改照片的分辨率，使得图片放大后，依旧清晰，保证质量。</li><li>PPTMinimizer<br>这是一款PPT以及word压缩神器，可以实现超级大得压缩率；</li><li>nordritools<br>这是一款PPT插件，俗称NT插件，可以采用该插件进行沿着横纵向来复制元素（制作时间轴或者电池很合适），同时还支持色彩搭配以及高清视屏导出。</li><li>TAGUL<br>作为一种文字排版的形式，文字云还是比较受大家欢迎的，这款软件不需要进行翻墙就可以直接实现文字云功能。</li><li>Collagelt Pro<br>可以实现海量照片的排版，可以生成照片墙。</li><li>皮影客<br>该软件原理非常简单，选个场景，添加人物，并且为其设定动作，如果具备其他需求，还可以添加字幕和配音，官网具备教程，就是傻瓜式操作。</li><li>百度H5<br>可以直接生成没有任何广告的滑动式网页，跟易企秀、MAKA等相比，文末不会自带广告。</li><li>Smallpdf<br>这是一个提供pd文件转换服务的网站，使用它可以直接轻松的将pdf文件转化为多种格式的文件，比如说PPT\DOC\JPG等</li></ol><h2 id="附录B-如何搞定全图型PPT"><a href="#附录B-如何搞定全图型PPT" class="headerlink" title="附录B 如何搞定全图型PPT"></a>附录B 如何搞定全图型PPT</h2><ol><li>排版能力:主要是对齐，由于字体较少，无非是字体的大小、粗细以及颜色对比；</li><li>配图能力：图片主要是为了让观众构建一种画面感，让文案看起来不那么单调。</li><li>构图能力：该店主要是指文案放在图片的什么地方。（1）具备中心以及非重心时，将文案放在非重心偏上一点的位置；（2）没有视重心时，将文字放在图片中心偏上位置；（3）当配图的视觉重心处于中心时，也将文案写在图片中心偏上的位置。</li></ol><h2 id="附录C-哪些网站能帮你提高PPT设计水平"><a href="#附录C-哪些网站能帮你提高PPT设计水平" class="headerlink" title="附录C 哪些网站能帮你提高PPT设计水平"></a>附录C 哪些网站能帮你提高PPT设计水平</h2><ol><li><a href="http://www.presentationload.com/">www.presentationload.com</a>: 网站提供有上午模板、地图、信息图等；</li><li>dribbble.com:该网站可以提高个人的配色能力，无需翻墙；</li><li><a href="http://www.zcool.com.cn/">www.zcool.com.cn</a> : 作为设计师互动的平台，里面具有大量优秀的作品，可以具备充足的资源去学习和借鉴；同时，可以查看很多大神的文章。</li></ol><h2 id="附录D-如何做好PPT演讲"><a href="#附录D-如何做好PPT演讲" class="headerlink" title="附录D 如何做好PPT演讲"></a>附录D 如何做好PPT演讲</h2><h4 id="D-1如何准备PPT"><a href="#D-1如何准备PPT" class="headerlink" title="D.1如何准备PPT"></a>D.1如何准备PPT</h4><ol><li>设计PPT之前，需要先了解一些基本信息：演讲屏幕的尺寸；演讲场地的大小；听众的属性；演讲的时长；</li><li>开始设计PPT之前，先把内容写出来：使用金字塔原理进行内容的构思以及写作，需要表述某一件事时，先把最终的观点表诉出来，然后亮出一级论据，一级论据再用二级论据进行论证。</li><li>内容起到的作用时提示，而非说明。</li><li>多用图片，少用文字<br>图文应该数量合适，文字起到注释作用，图片主要是让听众构建画面感。</li><li>少用表格，多用图表<br>图表更加直观。</li><li>使用必要的动画来引导观众的注意力</li><li>使用配乐渲染感情</li><li>注重幻灯片的风格统一<br>语言风格的统一：一个人写的，语气不变；设计风格的统一：体现在模板的设计上；素材风格统一：素材主要是指的图片；</li><li>注重封面和尾页设计<br>（1）封面时第一印象：可以告诉观众你要做什么；展现一种态度；起到引入话题的作用；<br>（2）尾页的设计：致谢表示一种礼仪；传递一种信息；得出一种结论；需要注意一种功能性的使用。</li><li>当内容页很多时，一定需要采用目录页的使用：主要是为了构建一个整体的框架，让听众知道你到底讲了哪些内容。</li></ol><h2 id="D-2-如何准备演讲"><a href="#D-2-如何准备演讲" class="headerlink" title="D.2 如何准备演讲"></a>D.2 如何准备演讲</h2><ol><li>一定要熟练将演讲内容跟PPT对应起来<br>口才再好的人也需要在台下把内容背熟；</li><li>一定要提前排练<br>可以进行提前的预演，以便于更好地修改。</li><li>开启演讲者视图</li><li>刚开始就引起观众兴趣：开头可以喜迎别人的兴趣最好；</li><li>多讲故事，多说人话<br>推荐一本书：《演说之禅》</li></ol>]]></content>
      
      
      <categories>
          
          <category> 演讲 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PPT设计 </tag>
            
            <tag> 必备技能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PPT学习笔记</title>
      <link href="/2023/02/20/PPT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/02/20/PPT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="PPT学习笔记"><a href="#PPT学习笔记" class="headerlink" title="PPT学习笔记"></a>PPT学习笔记</h1><p>最近在学习PPT的相关制作，B站看到有关于PPT教学的视频，这个视频很好，同时也是相当的精彩，里面一些好的知识点，我进行了整理。</p><h3 id="最简单的新手教学"><a href="#最简单的新手教学" class="headerlink" title="最简单的新手教学"></a>最简单的新手教学</h3><p>1.界面要理解的认识，不要依靠背诵；<br>2.灵活运用选项卡；<br>3.遇到该比例很崩溃的事情，起始也是很简单的。</p><p>## 快捷键设置<br>1.更习惯快捷键在【功能区下方显示】<br>2.右键既可以【添加到快速访问工具栏】</p><h3 id="PPT加密"><a href="#PPT加密" class="headerlink" title="PPT加密"></a>PPT加密</h3><p>1.保护演示文稿–&gt;用密码加密；<br>2.文件另存为—&gt;工具—-&gt;常规选项；</p><h3 id="布尔运算"><a href="#布尔运算" class="headerlink" title="布尔运算"></a>布尔运算</h3><p>1.布尔运算：后选的服从先选的属性；<br>2.自定义形状：画错点时，可以使用delete删除，可以采用【编辑顶点】调整形状；</p><h3 id="图形型封面、主题"><a href="#图形型封面、主题" class="headerlink" title="图形型封面、主题"></a>图形型封面、主题</h3><p>1.形状根据主题设计<br>2.用渐变色增加层次<br>3.用阴影增加质感</p><h3 id="图片型封面主题"><a href="#图片型封面主题" class="headerlink" title="图片型封面主题"></a>图片型封面主题</h3><p>1.自由形状的绘制；<br>2.文字与图形的层叠穿插在【选择窗格】里面，调整顺序</p><h3 id="三板斧套路"><a href="#三板斧套路" class="headerlink" title="三板斧套路"></a>三板斧套路</h3><p>1.根据城市、风景、上午场景作为出发点；<br>2.一定要根据内容，寻找三类型的细分图；</p><h3 id="全图型：图片具体表现"><a href="#全图型：图片具体表现" class="headerlink" title="全图型：图片具体表现"></a>全图型：图片具体表现</h3><p>1.视野辽阔，场景宏大；<br>2.具备运动趋势</p><h3 id="半图型"><a href="#半图型" class="headerlink" title="半图型"></a>半图型</h3><p>1.留白是为了更加透气<br>2.留的白不是绝对的白，而是信息较少<br>3.采用蒙版以及裁剪的方式创造留白</p><h3 id="封面制作的综合运用："><a href="#封面制作的综合运用：" class="headerlink" title="封面制作的综合运用："></a>封面制作的综合运用：</h3><p>1.考虑图文的结合<br>2.用色块、文案弥补图片的不足<br>3.学会“破”的处理方式，就是打破固定图形的束缚</p><h3 id="综合性封面"><a href="#综合性封面" class="headerlink" title="综合性封面"></a>综合性封面</h3><p>1.明确文字层级关系<br>2.灵活运用主题修饰<br>3.模糊处理，形成空间感<br>4.维持画面的平衡</p><h3 id="图片-：文不如表，表不如图"><a href="#图片-：文不如表，表不如图" class="headerlink" title="图片 ：文不如表，表不如图"></a>图片 ：文不如表，表不如图</h3><p>四大问题：变形、水印、模糊、过时<br>解决：线选好图片，在选对图片，不要图片跟内容毫无关系</p><h3 id="免费的图库推荐"><a href="#免费的图库推荐" class="headerlink" title="免费的图库推荐"></a>免费的图库推荐</h3><p>1.百度<br>2.必应<br>3.全景网<br>4.摄图网：每天只能下载一张图<br>5.pixabay<br>6.pexels</p><h3 id="强大的png图片"><a href="#强大的png图片" class="headerlink" title="强大的png图片"></a>强大的png图片</h3><p>方便的更换背景，可以与背景快速融合<br>查找方法：（1.千库网（一天最多下载三张）；（2.百度；（3.觅元素<br>1.png可以作为主题元素，但是注意比例<br>2.png也可装饰元素，可以增加层次<br>3.png之间不要简单的重叠，但是需要符合意境</p><h3 id="找图思维"><a href="#找图思维" class="headerlink" title="找图思维"></a>找图思维</h3><p>场景化、意境化、关联化</p><p>##图片的特点以及气质：完成自己的使命，满足三个特质<br>1.渲染氛围：底图、主体；<br>2.强化理解；<br>三个特质：氛围感、空间感、统一感：大小高低、风格统一、色调统一、整体与细节</p><h3 id="终极好图片"><a href="#终极好图片" class="headerlink" title="终极好图片"></a>终极好图片</h3><p>留白多、背景单一、背景色或深或浅</p><h3 id="创造好图"><a href="#创造好图" class="headerlink" title="创造好图"></a>创造好图</h3><p>1.万能的蒙版：1）线性渐变；2）径向渐变</p><h3 id="图标的使用"><a href="#图标的使用" class="headerlink" title="图标的使用"></a>图标的使用</h3><p>1.强化理解<br>2.拓展性强<br>一个图标可以反复多次使用；同一个PPT中需要确保图标的唯一性，稍微动手改改就可以唯一啦<br>3.统一性：风格统一（面性、线性、扁平化、拟物化）、大小统一（可以加入边框）、</p><h3 id="面型图标与线性图标"><a href="#面型图标与线性图标" class="headerlink" title="面型图标与线性图标"></a>面型图标与线性图标</h3><p>线性图标比面型图标更具备设计感；同时也是更加具备细节的。</p><h3 id="图标下载地址"><a href="#图标下载地址" class="headerlink" title="图标下载地址"></a>图标下载地址</h3><p>1.阿里巴巴图库<br>2.islide插件<br>3.美化大师（广告比较多，不推荐使用）</p><h3 id="认识字体：根据画面气质来选择字体"><a href="#认识字体：根据画面气质来选择字体" class="headerlink" title="认识字体：根据画面气质来选择字体"></a>认识字体：根据画面气质来选择字体</h3><p>宋体关键词：时尚、高端、文化、大气—&gt;标题或者小段字体<br>粗黑体适合于标题排版以及大型文字的表现；细黑体适合于正文排版<br>圆体：美食、儿童、优雅—-&gt;小段文字或者正文<br>书法体：禹卫书法行书简体、汉仪尚巍手书、叶根友刀锋黑草—-&gt;大气震撼：企业文化、广告<br><em>推荐字体：思源黑体、思源宋体、站酷高端黑、旁门正道标题体、站酷酷黑、郑庆科黄油体</em></p><h3 id="改造书法字"><a href="#改造书法字" class="headerlink" title="改造书法字"></a>改造书法字</h3><p>文字矢量化—&gt;可以修改艺术字体的颜色等（插入两个矩形，一个输入艺术字，另外一个备用，选择两个矩形框，进行减除操作之后，单个字体可以变成矢量化）</p><h3 id="文字精简"><a href="#文字精简" class="headerlink" title="文字精简"></a>文字精简</h3><p>word——&gt;PPT<br>防止将文字直接复制到PPT中<br>三步：精简文字、重组句子、总结归纳<br>删除的文字：解释性、原因性、重复性、辅助性/铺垫———&gt;让手中一眼就可以知道我们需要传达的内容<br>文字的重组：对文字进行“重组句子以及概括归纳”，一个合格的PPT制作者应该具备整理文案的能力</p><h3 id="层级区分"><a href="#层级区分" class="headerlink" title="层级区分"></a>层级区分</h3><p>主要时为了突出重点，并且可以很好地进行排版。调整字体的大小以及粗细。<br>##不能删除的文字<br>采用增加色块底纹，来进行区分信信息层级</p><h3 id="针对数字的区分"><a href="#针对数字的区分" class="headerlink" title="针对数字的区分"></a>针对数字的区分</h3><p>重点突出数字的内容，将数字提出来，理顺下面的句子，将单位缩小，然后进行排版。</p><h3 id="配色"><a href="#配色" class="headerlink" title="配色"></a>配色</h3><p>需要了解色彩理论<br>基本属性：色相、明度、纯度/色调：暖色调（红橙黄）、冷色调（蓝色、青色）<br><em>以三原色形成的彩色环作为参照</em><br>同色系：同一种色性调整明度以及饱和度<br>类似色：相差60度以内的色彩<br>邻近色：间隔60~90°以内的色彩<br>对比色：相互之间角度为120°的色彩<br>互补色：相互之间角度为180°的色彩<br><em>浅色不能直接配浅色，深色不饿能直接配深色；避免高纯度的配色；高纯度的配色看起来很廉价 </em></p><h3 id="三色原则"><a href="#三色原则" class="headerlink" title="三色原则"></a>三色原则</h3><p>一页PPT只能用三种颜色，主要时指三种色相（蓝、青、绿）—–&gt;是可以改变纯度的，也就是颜色的深浅<br>1.采用默认的配色：设计—-&gt;颜色—-&gt;选择合适的颜色<br>2.islide:色彩库选择合适的颜色<br>主色：辅色：强调色=70：25：5</p><h3 id="配色趋势分析"><a href="#配色趋势分析" class="headerlink" title="配色趋势分析"></a>配色趋势分析</h3><p>趋向于单色设计：具备对比<br>配色尽量使用LOGO色，并且一定需要控制主色的量，加入调和色，一般是黑白灰，信息需要惊醒层级区分</p><h3 id="配色的思考点"><a href="#配色的思考点" class="headerlink" title="配色的思考点"></a>配色的思考点</h3><p>VI：LOGO、网站、画册<br>行业色<br>配色网站：[<a href="http://www.peise.net/toolws/web">http://www.peise.net/toolws/web</a>]</p><p>### 渐变色的设计<br>高光、阴影、渐变、纹理<br>渐变元素：背景、图标、图片、文字<br>柔和渐变居多<br>色相渐变：<br>明度渐变：类似色、邻近色以及对比色<br>使用形式：线性渐变、径向渐变</p><h3 id="渐变色网站"><a href="#渐变色网站" class="headerlink" title="渐变色网站"></a>渐变色网站</h3><p>1.<a href="https://uigradients.com]/">[https://uigradients.com]</a><br>2.[<a href="https://webkul.github.io/coolhue">https://webkul.github.io/coolhue</a>]<br>3.<a href="https://webgradients.com]/">[https://webgradients.com]</a></p><h3 id="图表之道"><a href="#图表之道" class="headerlink" title="图表之道"></a>图表之道</h3><p>1.逻辑图表：<br>2.数据图表：可以快速插入，在PPT中可以任意选择；1）对比：饼图、圆环图、柱形图、条形图；2）趋势：折线图、面积图；<br>注意：选对图表很重要</p><p>##图表的美化<br>背景（渐变、纹理）、元素（网格线、数据标签、图例）、效果（阴影、三维）进行删除或者整理。<br>修改图表时，直接将选中图表，边框中现实的就是图表的修改项</p><h3 id="创意图表的设计"><a href="#创意图表的设计" class="headerlink" title="创意图表的设计"></a>创意图表的设计</h3><p>采用复制粘贴并且使用层叠并且缩放来调整图形的大小。</p><h3 id="借助插件进行处理智能图表"><a href="#借助插件进行处理智能图表" class="headerlink" title="借助插件进行处理智能图表"></a>借助插件进行处理智能图表</h3><p>主要时采用isilde中的智能图表进行更改。</p><h3 id="采用PPT自带的smartart进行设计图表"><a href="#采用PPT自带的smartart进行设计图表" class="headerlink" title="采用PPT自带的smartart进行设计图表"></a>采用PPT自带的smartart进行设计图表</h3><p>可以制作环形的图片填充或者采用布尔运算进行设计</p><h3 id="逻辑图表的四大关系"><a href="#逻辑图表的四大关系" class="headerlink" title="逻辑图表的四大关系"></a>逻辑图表的四大关系</h3><p>并列、因子、流程、循环<br>推荐插件：美化大师/islide;或者直接网上下载AI模式</p><h3 id="版式设计"><a href="#版式设计" class="headerlink" title="版式设计"></a>版式设计</h3><p>排版问题：深奥的学问<br>设计理论：认识理论、利用理论、突破理论<br>对比、对齐、重复、亲密、层次、留白<br>1.对齐：解决这个问题相当于解决了百分之八十的问题；<br>隐形的线：主要时一条对齐的线条<br>文字的对齐：左、右、两端、分散、居中<br>建议：采用一种主要的对齐方式为主，然后采用多种对齐方式为辅。<br>2.对比：大小、形状、颜色、位置、前后、虚实<br>主要是为了突出一个重点的位置。<br><em>原则之间是相互关联的</em><br>目的：明确画面的主体，增强页面效果；避免大小含糊不清；<br>3.重复以及亲密性设计<br>重复其实向相当于是统一：风格、颜色、字体、形状、明亮、距离、质感、形式、大小<br><em>重复将孤立的画面形成一个统一的整体；保持大方向统一，一些细节元素可以改变</em><br>目的</p><p>：增强整体的统一性，避免使用太多的重复利用一个元素；<br>4.亲密性原则<br>整体化思维<br>目的：实现组织性，避免不同元素之间同样大小的留白<br>5.层次感<br>空间感、秩序感<br>色彩渐变、物体的阴影、虚实处理（透明度）</p><h3 id="排版方法"><a href="#排版方法" class="headerlink" title="排版方法"></a>排版方法</h3><p>上下、左右、居中、满版<br><em>当你不知道怎么排版的时候，就采用居中排版的方式</em></p><h3 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h3><p>主要是在动画窗格中进行修改动画的各种效果。<br>柔和以及浮夸的两类动画<br>1.浮夸的动画：幅度很大，效果很廉价；<br>常用：进入、强调、退出、路径<br>2.柔和的动画<br>弹性以及柔性：需要设置动画的属性：平滑结束拉到百分之百。</p><h3 id="平滑过渡"><a href="#平滑过渡" class="headerlink" title="平滑过渡"></a>平滑过渡</h3><p>islide<br>先选择A，在选择B，随后直接进行选择平滑过渡就可以了。</p><h3 id="切换动画"><a href="#切换动画" class="headerlink" title="切换动画"></a>切换动画</h3><p>不要采用随机动画，需要采用转场动画。</p><h3 id="开场动画"><a href="#开场动画" class="headerlink" title="开场动画"></a>开场动画</h3><p>LOGO演绎<br>情节演绎<br>场景带入</p><h3 id="动画遮罩"><a href="#动画遮罩" class="headerlink" title="动画遮罩"></a>动画遮罩</h3><p>注意素材的层级关系。<br>可以做旋转的地图以及波浪。</p><h3 id="审美"><a href="#审美" class="headerlink" title="审美"></a>审美</h3><p>1.花瓣网<br>2.站酷<br>3.behance<br>4.dribbble</p><h3 id="借鉴"><a href="#借鉴" class="headerlink" title="借鉴"></a>借鉴</h3><p><em>模仿是最好的捷径</em><br>主要是模仿三个点：形式版式以及配色<br>需要动手改造，并且进行思考。</p><h3 id="演示行业的设计趋势"><a href="#演示行业的设计趋势" class="headerlink" title="演示行业的设计趋势"></a>演示行业的设计趋势</h3><p>3D模型模型的格式：（flx、obj、3mf、ply、stl、glb）<br>采用视频与PPT相结合，从而更加凸显情感以及表现力。</p><p>经过一天左右的学习，终于将锐普PPT在B站的视频进行了很快的学习，里面具有一些PPT的设计思维，同时也有PPT的一些制作方法技巧，推荐了一些学习的网站，以及一些应用的网站，希望可以帮助大家进步。</p>]]></content>
      
      
      <categories>
          
          <category> 演讲 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PPT设计 </tag>
            
            <tag> 必备技能 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
